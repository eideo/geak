<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.xsocket.geak.dao.BusinessDao">

  <cache />

  <resultMap id="result" type="com.github.xsocket.geak.entity.Business">
    <!-- 基本业务信息 -->
    <id     property="id"    column="id"    javaType="Integer" jdbcType="INTEGER" />
    <result property="name"  column="name"  javaType="String"  jdbcType="VARCHAR" />
    <result property="alias" column="alias" javaType="String"  jdbcType="VARCHAR" />
    <result property="note"  column="note"  javaType="String"  jdbcType="VARCHAR" />
    <!-- 关联公司 -->
    <association property="company" javaType="com.github.xsocket.geak.entity.Company">
      <id     property="id"      column="company_id"      javaType="Integer" jdbcType="INTEGER" />
      <result property="name"    column="company_name"    javaType="String"  jdbcType="VARCHAR" />
      <result property="alias"   column="company_alias"   javaType="String"  jdbcType="VARCHAR" />
      <result property="address" column="company_address" javaType="String"  jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <select id="selectById" resultMap="com.github.xsocket.geak.dao.BusinessDao.result" 
    flushCache="false" useCache="true">
    SELECT b.id, b.name, b.alias, b.note,
      c.id AS company_id, c.name AS company_name, 
      c.alias AS company_alias, c.address AS company_address
    FROM geak_business b
      JOIN geak_company c ON b.company_id = c.id
    WHERE 
      b.id = #{id,javaType=Integer,jdbcType=INTEGER}
  </select>
  
  <select id="selectByCompany" resultMap="com.github.xsocket.geak.dao.BusinessDao.result" 
    flushCache="false" useCache="true">
    SELECT b.id, b.name, b.alias, b.note,
      c.id AS company_id, c.name AS company_name, 
      c.alias AS company_alias, c.address AS company_address
    FROM geak_business b
      JOIN geak_company c ON b.company_id = c.id
    WHERE 
      b.company_id = #{company.id,javaType=Integer,jdbcType=INTEGER}
  </select>

  <insert id="insert" flushCache="true" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO geak_business 
      (name, alias, note, company_id) 
    VALUES 
      (#{name,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
       #{company.id,javaType=Integer,jdbcType=INTEGER})
  </insert>
  
  <update id="update" flushCache="true">
    UPDATE geak_business 
    <set>
      <if test="name != null">name = #{name,jdbcType=VARCHAR},</if>
      <if test="alias != null">alias = #{alias,jdbcType=VARCHAR},</if>
      <if test="note != null">note = #{note,jdbcType=VARCHAR},</if>
      <if test="company != null and company.id != null">company_id = #{company.id,javaType=Integer,jdbcType=INTEGER},</if>
    </set>
    WHERE 
      id = #{id,jdbcType=Integer,jdbcType=INTEGER}
  </update>
  
  <delete id="delete" flushCache="true">
    DELETE FROM geak_business
    WHERE 
      id = #{id,javaType=Integer,jdbcType=INTEGER}
  </delete>

</mapper>