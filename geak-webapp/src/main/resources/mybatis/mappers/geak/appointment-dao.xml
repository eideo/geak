<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.xsocket.geak.dao.AppointmentDao">

  <cache />

  <resultMap id="result" type="com.github.xsocket.geak.entity.Appointment">
    <!-- 基本预约数据 -->
    <id     property="id"                column="id"               javaType="Integer" jdbcType="INTEGER" />
    <result property="datetime"          column="appointment_date" javaType="Date"    jdbcType="TIMESTAMP" />
    <result property="confirmedDatetime" column="confirmed_date"   javaType="Date"    jdbcType="TIMESTAMP" />
    <result property="cancelledDatetime" column="cancelled_date"   javaType="Date"    jdbcType="TIMESTAMP" />
    <result property="customerCount"     column="customer_count"   javaType="Integer" jdbcType="INTEGER" />
    <result property="state"             column="state"            javaType="String"  jdbcType="VARCHAR" />
    <!-- 关联客户数据 -->
    <association property="customer" javaType="com.github.xsocket.geak.entity.Customer">
      <id     property="id"        column="customer_id"   javaType="Integer" jdbcType="INTEGER" />
      <result property="name"      column="customer_name" javaType="String"  jdbcType="VARCHAR" />
      <result property="sex"       column="customer_sex"  javaType="String"  jdbcType="CHAR" />
      <result property="telephone" column="telephone"     javaType="String"  jdbcType="VARCHAR" />
    </association>
    <!-- 关联公司(门店) -->
    <association property="company" javaType="com.github.xsocket.geak.entity.Company">
      <id     property="id"      column="company_id"      javaType="Integer" jdbcType="INTEGER" />
      <result property="name"    column="company_name"    javaType="String"  jdbcType="VARCHAR" />
      <result property="alias"   column="company_alias"   javaType="String"  jdbcType="VARCHAR" />
      <result property="address" column="company_address" javaType="String"  jdbcType="VARCHAR" />
    </association>
    <!-- 关联业务(主题) -->
    <collection property="businesses" column="id" ofType="com.github.xsocket.geak.entity.Business" 
        select="com.github.xsocket.geak.dao.BusinessDao.selectByAppointment" />
  </resultMap>
  
  <!-- 查询某个公司(门店)下的预约 -->
  <select id="selectByCompany" resultMap="com.github.xsocket.geak.dao.AppointmentDao.result" 
    flushCache="false" useCache="true">
    SELECT <include refid="_select_appointment" />
    <where>
      <if test="companyId != null">
        a.company_id = #{companyId,javaType=Integer,jdbcType=INTEGER}
      </if>
      <if test="start != null">
          AND a.appointment_date >= #{start,jdbcType=TIMESTAMP}
      </if>
      <if test="end != null">
          AND a.appointment_date <![CDATA[<]]> #{end,jdbcType=TIMESTAMP}
      </if>
    </where>
    ORDER BY a.appointment_date
  </select>
  
  <!-- 查询某些主题的预约 -->
  <select id="selectByBusiness" resultMap="com.github.xsocket.geak.dao.AppointmentDao.result" 
    flushCache="false" useCache="true">
    SELECT  <include refid="_select_appointment" />
      JOIN geak_appointment_business ab ON a.id = ab.appointment_id
      JOIN geak_business b ON b.id = ab.business_id
    <where>
      <if test="companyId != null">
        a.company_id = #{companyId,javaType=Integer,jdbcType=INTEGER}
      </if>
      <if test="start != null">
        AND a.appointment_date >= #{start,jdbcType=TIMESTAMP}
      </if>
      <if test="end != null">
        AND a.appointment_date <![CDATA[<]]> #{end,jdbcType=TIMESTAMP}
      </if>
      <if test="business != null">
        AND ab.business_id IN
          <foreach item="businessId" collection="business" open="(" separator="," close=")">
              #{businessId,javaType=Integer,jdbcType=INTEGER}
          </foreach> 
      </if>
    </where>
    ORDER BY a.appointment_date
  </select>
  
  <sql id="_select_appointment">
      a.id, a.appointment_date, a.confirmed_date, a.cancelled_date, a.customer_count, a.state,
        customer.id as customer_id, customer.name as customer_name, customer.sex as customer_sex, customer.telephone,
        c.id AS company_id, c.name AS company_name, c.alias AS company_alias, c.address AS company_address
    FROM geak_appointment a
      JOIN geak_customer customer ON a.customer_id = customer.id
      JOIN geak_company c ON a.company_id = c.id
  </sql>

  <select id="selectById" resultMap="com.github.xsocket.geak.dao.AppointmentDao.result" 
    flushCache="false" useCache="true">
    SELECT <include refid="_select_appointment" />
    WHERE 
      a.id = #{id,javaType=Integer,jdbcType=INTEGER}
  </select>

  <insert id="insert" flushCache="true" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO geak_appointment 
      (appointment_date, confirmed_date, cancelled_date, customer_count, customer_id, company_id, state) 
    VALUES 
      ( #{datetime,jdbcType=TIMESTAMP}, 
        #{confirmedDatetime,jdbcType=TIMESTAMP}, 
        #{cancelledDatetime,jdbcType=TIMESTAMP}, 
        #{customerCount,jdbcType=INTEGER}, 
        #{customer.id,jdbcType=Integer,jdbcType=INTEGER}, 
        #{company.id,jdbcType=Integer,jdbcType=INTEGER}, 
        #{state,jdbcType=VARCHAR} )
  </insert>
  
  <update id="update" flushCache="true">
    UPDATE geak_appointment 
    <set>
      <if test="customer != null and customer.id != null">customer_id = #{customer.id,jdbcType=Integer,jdbcType=INTEGER},</if>
      <if test="datetime != null">appointment_date = #{datetime,jdbcType=TIMESTAMP},</if>
      <if test="confirmedDatetime != null">confirmed_date = #{confirmedDatetime,jdbcType=TIMESTAMP},</if>
      <if test="cancelledDatetime != null">cancelled_date = #{cancelledDatetime,jdbcType=TIMESTAMP},</if>
      <if test="customerCount != null">customer_count = #{customerCount,jdbcType=INTEGER},</if>
      <if test="state != null">state = #{state,jdbcType=VARCHAR},</if>
    </set>
    WHERE 
      id = #{id,jdbcType=Integer,jdbcType=INTEGER}
  </update>
  
  <delete id="delete" flushCache="true">
    DELETE FROM geak_appointment
    WHERE 
      id = #{id,javaType=Integer,jdbcType=INTEGER}
  </delete>
  
  <!-- 插入预约的主题 -->
  <insert id="insertRelation" parameterType="java.util.Set">
    INSERT INTO geak_appointment_business
      (appointment_id, business_id) 
    VALUES 
      <foreach collection="pairs" item="pair" separator="," >  
        (#{pair.left.id,jdbcType=Integer,jdbcType=INTEGER}, #{pair.right.id,jdbcType=Integer,jdbcType=INTEGER})
      </foreach> 
  </insert>

  <!-- 移除预约的主题 -->
  <delete id="deleteRelation">
    DELETE FROM geak_appointment_business
    <where> 
      <if test="left != null and right != null">
        appointment_id = #{left.id,jdbcType=Integer,jdbcType=INTEGER}
        AND
        business_id = #{right.id,jdbcType=Integer,jdbcType=INTEGER}
      </if> 
      <if test="left != null and right == null">
        appointment_id = #{left.id,jdbcType=Integer,jdbcType=INTEGER}
      </if>
      <if test="left == null and right != null">
        business_id = #{right.id,jdbcType=Integer,jdbcType=INTEGER}
      </if>
    </where>
  </delete>

</mapper>